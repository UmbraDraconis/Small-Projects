This project asks us to implement a shopping cart processor that takes the instructions from a file as well the list of items that are stocked in the store. There are two input files, each with a set of different information. The first input file is the items.txt file, which consists of all the items in the store as well as the price for each individual item. The second input file is the orders.txt file, which consists of a certain command with a certain customer and probably an item. We use the second input file to process the actions the customer has taken with/without a particular item. The output dictates each action each customer has taken in a specific order.

I first find and scan the input files separately to establish the inputs we will be utilizing. Afterwards, I take the items file first and construct an inventory of items that are in stock in the shop. I do this by implementing the TreeMap data structure, which holds the list of items in the store. After constructing and instantiating the inventory, I scan the orders file to determine the different actions to be taken for different customers. Each customer has his/her own shopping cart which has been constructed using a TreeMap of Arraylists for different customers. The Arraylists represents the list of items within that particular customer's cart. As soon as each action has been taken, I display the action as an output to conclude that the specified action has fully been implemented. Once all the instructions has been implemented, the output will show the results of all the actions that were taken and described in the orders file. As soon as this is over, the program ends.

The structure of the code consists of two different classes as well as a main method found within the Shop class. The two different classes are Items class and Shop class. The Items class contains the behavior and fields that would be found on each item, such as price and name of the item. The Shop class contains both the nested Items class as well as the main methods along side other methods. The other methods that are found within the shop class are the specified action methods for each of the four actions each customer would take:  add, delete, view, and checkout. There is also a method that will exit the program automatically if the command line argument is not typed correctly. The packages that I used are the IO package for reading files, Scanner package to scan each file, TreeMap package to map the inventory and customer's shopping cart, and the ArrayList to list the items within each customer's shopping cart.

I designed the programmed into different bits and hand traced each method to make sure the output would be how I would like to see it. Once I saw that there was no logical errors or relational errors, I compiled the file and ran to see if there were any other errors I may have overlooked. I did overlook the output design of the program, which I remedied by going back to the programming and adjusting to make the output become more readable. Other than the ArrayList not instantiating an object at the moment of initializing, the program ran smoothly without much adjustments.

I learned that I need to study the Java API and learn to read each description of each method or constructor as well as the description of the class or interface. I may need assistance on reading these descriptions since there are many technical terminology that I do not fully understand.